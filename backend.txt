*********************************************************************
26/07/2018  Занятие 21 (3)
*********************************************************************
 == Базы данных ==
Типы:
* Реляционная (SQL) // реляционная математика
* Документо-ориентированная (MongoDB)
* Хранилище Ключ-значение, Key-Value Stored (Mamcache, Redis, ...)
* Граф-базы (соцсети) (Neo4G)
* Колоночные БД (Vertika, YandexFlip) -



== MongoDB ==
//(v.4)появились транзакции
Либо устанавливается на компьтер
Либо установить docker
	Docker - создаёт отдельные участки памяти, где работает приложение
mlab.com - предоставляет базу онлайн
//CloudProvider: Amazon, Google, Azure, AlibabaCloud

Создали базу на mlab
Далее создать пользователя
//Монго запускается по умолчанию на порту 27017. Можно настроить


//24:14
Библиотека mongoose

Подключаемся к базе
Создаем схему

robomongo для просмотра базы
_id - ObjectID заполняется автоматом или вручную


?? WEB Socket
?? Clusters




 

*********************************************************************
23/07/2018  Занятие 20 (3)
*********************************************************************
1) Разбор ДЗ //20:15

res.json вместо res.send чтобы вернуть объекто json

item = items.find(el => el.id.toString() === id.toString())

Rest API ????
//Midleware 
//"express vody parser" - npm i body-parser
Этот парсер должен обрабатываться, как только пришёл запрос
Прописать в 
app.use(bodyParser.json())

router.post("/item", (req, res) => {
	//20:40 обработка
})

query and body есть для POST и GET запроса.Для GET query не используется


Шаблонизаторы //20:51
	нужны для создания страницы, используя компоненты, переменные
Pug, handlebars

app.set('views', './views')
app.set('view engine', 'pugs'

app.get(
	return
)

index.pug - 
//21:05 CDNJS - берём bootstrap
прописываем html в index.pug

//21:17
static/js/my.js - подключаем его в index.pug и здесь пишем js для html
Есть стат
app.use("/static", express.static("./static"))

//21:39
дополнительные модули expres()

//21:41 Coockies
JWT - для ключей

//json placeholder - тестовая база объектов


//22:00 разговор о том как использовать express и react

*********************************************************************
19/07/2018  Занятие 19 (2)
*********************************************************************
1) Разбор ДЗ (сервер, обработка книги)
__dirname
__filename
   regexp online
   regexp шпаргалка
   lodash - для работы с коллекциями

2) (21:25) expressjs - быстрый, гибкий, минималистичный
+

postman - для посылки разных запросов

app.<method> ( path, function())
   <method> - GET, POST, ALL, etc

app.get ("/", (req, res, next) => {}_);

app.use ("/", (req, res, next) => {}_); -- для проверки заголовков
                        -- управление передаётся next()';

ДЗ заготовка для инет-магаза
/api/...
  GET
   /items    - массив элементов [{}{}{}]
   /item/:id - конкретный объект {}
   /cart - объект-текущая корзина {}
   /orders = [orders]
  POST
   /cart/add - реализовать метод добавления в корзину {object, count}
   /item {} записать в массив объектов items
   /cart/purchase => 201 (add to oder)
  DELETE
   /cart/item/:id - удалить объект из cart (возвращает код 202)
   /item/:id  - удалить из items

Дополнительные фремворки:
koa2
sails
hapi.js

"заморфные приложение"




*********************************************************************
16/07/2018  Занятие 1
*********************************************************************




=====================================================================
Занятие 18 (1)
https://meet691593211.adobeconnect.com/py8h5ad5vssn/
Занятие 19 (2)
https://meet691593211.adobeconnect.com/pvopyxqt9jyk/
Занятие 20 (3)
Занятие 21 (4)
Занятие 22 (5)
Занятие 23 (6)
Занятие 24 (7)
Занятие 25 (8)
Занятие 26 (9)

